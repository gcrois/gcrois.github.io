digraph {
    #layout="fdp";
    rankdir="BT";
    #concentrate=true;

    # CLUSTERS
    subgraph cluster_0 {
        label="Templates";
        
        array [label="array[T]", style="dashed"];
        table [label="table[K,V]", style="dashed"];
        algraph [label="algraph[N,E]", style="dashed"];
    }

    subgraph cluster_1 {
        label="Types";
        f64, zfloat [style="filled"];
        u8, s32, zint [style="filled"];

        array0 [label="array[s32]", style="filled"];
        array1 [label="array[array[str]]", style="filled"];

        table0 [label="table[str,zfloat]", style="filled"];

        algraph0 [label="algraph[str,f64]", style="filled"];

        str [label="str", style="filled"];
    }

    array0 -> list [label="s32"];
    array1 -> list [label="array[str]"];
    array -> array0, array1;

    algraph0 -> graph_ [label="str,f64"];
    algraph -> algraph0;

    table -> table0;
    table0 -> dict [label="str,zfloat"];
    str -> text;
    text -> list[label="char"];

    #array -> list;
    #table -> dict;
    #algraph -> graph_;

    # NODES (FORMS)

    any [color="#935EA9", style="filled"];

    datum [color="#C79B6A", style="filled"];
    datum -> any;

    text -> datum;

    number [color="#6FABB3", style="filled"];
    number -> datum;

    real -> number;
    rational -> real;
    float -> rational;
    int -> rational;

    map [label="map[K,V]"];
    map -> any;

    set [label="set[T]"];
    set -> any;
    set -> iter;

    seq [label="seq[T]"];
    seq -> any;
    seq -> iter;
    seq -> set;


    iter [label="iter[T]"];
    iter -> any;

    list [label="list[T]"];
    list -> dict [label="int,T"];
    list -> seq;

    maybe [label="maybe[T]"];
    maybe -> list;

    #func [label="func[A,R]"];
    #func -> map [label="A,R"];

    dict [label="dict[K,V]"];
    dict -> map;
    dict -> list [label="(K,V)"];

    graph_ [label="graph[N,E]"];
    graph_ -> any;
    graph_ -> list [label="nodes: N"];
    graph_ -> list [label="edges: E"];

    u8, s32, zint -> int;
    f64, zfloat -> float;

}
